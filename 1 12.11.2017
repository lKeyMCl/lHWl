/*
Напишите программу, которая удаляет из массива все простые числа
встречающиеся больше одного раза.
*/

#include <iostream>
#include <cstdlib>

using namespace std;

bool isPrime(long a){
    if( a == 2) return true; 
    if( (a==0) || (a%2 == 0) ) return false;
    if ( a == 1 ) return false;
    int k = a/2;
    for( long i = 3; i <= k; i++)
      if( a % i == 0) return false;
    return true;
}

void delDubPrimes(long **a, int *N){
    long *p = *a; 
    bool isDubs = false;  
    long markDub; 
                 
                 
    long NN = 0; 
    long d;

    for( int i = 0; i < *N-1; i++){ 
        d = p[i];
        if( isDubs && ( d == markDub ) ) continue;
        if( isPrime(d) ){
            
            bool findDub = false;   
            for( int j = i+1; j < *N; j++){
                if( p[j] == d){  
                   findDub = true;
                   if( !isDubs ){  
                        isDubs = true;
                        markDub = d;
                   }
                   p[j] = markDub;
                   NN++;
                }
            }
            if( findDub) {
                p[i] = markDub;
                NN++;
            }
        }
    }
    if( !isDubs) return;  
    NN = *N - NN; 
    if( NN == 0){ 
        *N = 0;
        delete [] p; 
        return;
    }
    long *b = new long [NN]; 
    long j = 0;
    for( int i = 0; i < *N; i++) {
        if( p[i] != markDub ) {    b[j] = p[i]; j++; };
    }
    delete [] p;
    *N = NN;     
    *a = b;     
    return;

}

int main(int argc, char** argv) {
    int N;
    cout << "Enter array size: ";
    cin >> N;
    long *a = new long [N];
    cout << "Enter numbers: ";
    for( int i=0; i < N; i++) cin >> a[i];

    delDubPrimes( &a, &N );

    if( N == 0 ){
        cout << "all numbers was deleted\n";
        return 0;
    }
    //cout << N << "\n";
    for( int i = 0; i < N; i++ ) cout << a[i] << " ";
    cout << "\n";

    system("PAUSE");
    return EXIT_SUCCESS;
}
